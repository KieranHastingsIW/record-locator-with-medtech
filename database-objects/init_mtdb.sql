DO
$do$
BEGIN
   IF NOT EXISTS ( SELECT FROM pg_catalog.pg_roles WHERE  rolname = 'dbusername') THEN
      CREATE USER dbusername PASSWORD 'dbusername';
   END IF;
END
$do$;
-- Create templates database if not already there --
SELECT 'CREATE DATABASE systemdb' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'systemdb');\gexec
GRANT ALL PRIVILEGES ON DATABASE systemdb TO dbusername;
-- Connect to templates db
\c systemdb dbusername;

BEGIN TRANSACTION;

DROP TABLE IF EXISTS PATIENT_TABLE CASCADE;

CREATE SEQUENCE PATIENT_SEQUENCE START WITH 1 INCREMENT BY 1;

CREATE TABLE PATIENT_TBL (
    PATIENT_ID        INTEGER DEFAULT nextval('PATIENT_SEQUENCE'),
    FIRSTNAME       VARCHAR(256) NOT NULL ,
    LASTNAME         VARCHAR(256) NOT NULL ,
    EMAIL            VARCHAR(256) NOT NULL ,
    NHI            VARCHAR(20) NOT NULL ,
    GENDER            VARCHAR(256) NOT NULL ,
    DRUG_NAME            VARCHAR(256) NOT NULL ,
    VISIT_DATE   TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PATIENT_ID UNIQUE (PATIENT_ID),
    PRIMARY KEY ( PATIENT_ID )
);


DROP TABLE IF EXISTS SYSTEM_TBL CASCADE;
DROP SEQUENCE IF EXISTS SYSTEM_ID_SEQUENCE;
DROP INDEX IF EXISTS IDX_SYSTEM_ID;
DROP INDEX IF EXISTS IDX_SOURCE_SYS;
CREATE SEQUENCE SYSTEM_ID_SEQUENCE START WITH 1 INCREMENT BY 1;

CREATE TABLE SYSTEM_TBL (
    SYSTEM_ID       INTEGER DEFAULT nextval('SYSTEM_ID_SEQUENCE'),
    SOURCE_SYS      VARCHAR(20) NOT NULL ,
    SYS_TYPE        VARCHAR(20) NOT NULL ,
    LOC_TYPE        VARCHAR(20),
    THIRD_PARTY_ID  VARCHAR(20),
    LOCATION        VARCHAR(50) NOT NULL ,
    CONSTRAINT SYSTEM_ID_CONSTRAINT UNIQUE (SYSTEM_ID),
    CONSTRAINT SYSTEM_KEY_CONSTRAINT UNIQUE (SOURCE_SYS,SYS_TYPE),
    PRIMARY KEY ( SOURCE_SYS, SYS_TYPE )
);
CREATE INDEX IDX_SYSTEM_ID ON SYSTEM_TBL(SYSTEM_ID);
CREATE INDEX IDX_SOURCE_SYS ON SYSTEM_TBL(SOURCE_SYS);
INSERT INTO SYSTEM_TBL (SOURCE_SYS, SYS_TYPE, LOC_TYPE, THIRD_PARTY_ID, LOCATION) VALUES ('MedTech','1','URL', 'MD-ppp', 'https://medtech/1');
INSERT INTO SYSTEM_TBL (SOURCE_SYS, SYS_TYPE, LOC_TYPE, THIRD_PARTY_ID, LOCATION) VALUES ('ManageMyHealth','1','URL', 'MMM-ppp', 'https://managemyhealth/1');
INSERT INTO SYSTEM_TBL (SOURCE_SYS, SYS_TYPE, LOC_TYPE, THIRD_PARTY_ID, LOCATION) VALUES ('Z_ManageMyHealth','1','URL', 'MMM-ppp', 'https://managemyhealth/2')
    ON CONFLICT (SOURCE_SYS,SYS_TYPE)
    DO UPDATE SET LOC_TYPE = 'HTTP', THIRD_PARTY_ID='MMM-zzz',LOCATION='https://managemyhealth/2'
    RETURNING SYSTEM_ID;
SELECT * FROM SYSTEM_TBL;

-- DATATYPE
-- --------
DROP TABLE IF EXISTS DATATYPE_TBL CASCADE;
DROP SEQUENCE IF EXISTS TYPE_ID_SEQUENCE;
DROP INDEX IF EXISTS IDX_DATA_TYPE_ID;
DROP INDEX IF EXISTS IDX_DATA_TYPE_DESC;
CREATE SEQUENCE TYPE_ID_SEQUENCE START WITH 1 INCREMENT BY 1;

CREATE TABLE DATATYPE_TBL (
    TYPE_ID        INTEGER DEFAULT nextval('TYPE_ID_SEQUENCE'),
    TYPE_DESC      VARCHAR(20) NOT NULL ,
    RANK            INTEGER ,
    CONSTRAINT TYPE_ID UNIQUE (TYPE_ID),
    CONSTRAINT DATATYPE_KEY_CONSTRAINT UNIQUE (TYPE_DESC),
    PRIMARY KEY ( TYPE_ID )
);
CREATE INDEX IDX_DATA_TYPE_ID ON DATATYPE_TBL(TYPE_ID);
CREATE INDEX IDX_DATA_TYPE_DESC ON DATATYPE_TBL(TYPE_DESC);
INSERT INTO DATATYPE_TBL (TYPE_DESC,RANK) VALUES ('typedesc1',1);
INSERT INTO DATATYPE_TBL (TYPE_DESC,RANK) VALUES ('typedesc2',2);
INSERT INTO DATATYPE_TBL (TYPE_DESC,RANK) VALUES ('typedesc1',3)
    ON CONFLICT (TYPE_DESC)
    DO UPDATE SET RANK = '3'
    RETURNING TYPE_ID;
SELECT * FROM DATATYPE_TBL;

commit;